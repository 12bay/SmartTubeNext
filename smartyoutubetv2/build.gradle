apply from: gradle.ext.sharedModulesConstants
apply plugin: 'com.android.application'

android {
    // FIX: Default interface methods are only supported starting with Android N (--min-api 24)
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion project.properties.compileSdkVersion
    buildToolsVersion project.properties.buildToolsVersion
    testOptions.unitTests.includeAndroidResources = true
    
    defaultConfig {
        // values linked with applicationId: searchable.searchSuggestAuthority, searchable.searchSuggestIntentData, VideoContract.CONTENT_AUTHORITY
        applicationId "com.liskovsoft.videomanager2"
        minSdkVersion project.properties.minSdkVersion
        targetSdkVersion project.properties.targetSdkVersion
        versionCode 15
        versionName "0.5"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "long", "TIMESTAMP", System.currentTimeMillis() + "L"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // gradle 4.6 migration: disable dimensions mechanism
    // more: https://proandroiddev.com/advanced-android-flavors-part-4-a-new-version-fc2ad80c01bb
    flavorDimensions "default"

    productFlavors {
        vbeta {
            // matchingFallbacks = ['lite']
            applicationIdSuffix ".beta"
        }
        vorig {
            // matchingFallbacks = ['lite']
        }
    }

    // naming example: SmartYouTubeTV_Xwalk_v6.8.12_r.apk
    // https://stackoverflow.com/questions/18332474/how-to-set-versionname-in-apk-filename-using-gradle
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def project = "STubeTV"
            def flavor = variant.productFlavors[-1].name.capitalize()
            def buildType = variant.variantData.variantConfiguration.buildType.name.take(1)
            def version = variant.versionName

            def newApkName = sprintf("%s_%s_v%s_%s.apk", [project, flavor, version, buildType])

            // gradle 4.6 migration
            output.outputFileName = new File(newApkName)
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'androidx.leanback:leanback:' + leanbackXLibraryVersion
    implementation 'androidx.leanback:leanback-preference:' + leanbackXLibraryVersion
    implementation 'androidx.recommendation:recommendation:' + leanbackXLibraryVersion
    implementation 'androidx.annotation:annotation:' + appCompatXLibraryVersion
    implementation 'androidx.recyclerview:recyclerview:' + appCompatXLibraryVersion

    implementation 'com.github.bumptech.glide:glide:' + glideVersion

    implementation 'com.google.android.exoplayer:exoplayer:' + amazonExoplayerVersion
    implementation 'com.google.android.exoplayer:extension-leanback:' + amazonExoplayerVersion
    implementation 'androidx.media:media:' + mediaXLibraryVersion // exoplayer fix

    testImplementation 'junit:junit:' + junitVersion
    testImplementation 'org.robolectric:robolectric:' + robolectricVersion
    androidTestImplementation 'androidx.test.ext:junit:' + testXSupportLibraryVersion
    androidTestImplementation 'androidx.test.ext:truth:' + testXSupportLibraryVersion
    androidTestImplementation 'androidx.test:runner:' + testXSupportLibraryVersion
    androidTestImplementation 'androidx.test:rules:' + testXSupportLibraryVersion
    androidTestImplementation 'androidx.test.espresso:espresso-core:' + espressoVersion

    implementation project(':sharedutils')
    implementation project(':mediaserviceinterfaces')
    implementation project(':youtubeapi')

    implementation 'io.reactivex.rxjava2:rxandroid:' + rxAndroidVersion
    implementation 'io.reactivex.rxjava2:rxjava:' + rxJavaVersion

    implementation project(path: ':common')
    
    // vbetaImplementation project(path: ':leanbackassistant')
}
